{"ast":null,"code":"import _defineProperty from \"/Users/preshin/Study/shoppingCart/shopping-cart/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/preshin/Study/shoppingCart/shopping-cart/src/contexts/StoreContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, createContext } from 'react';\nexport const StoreContext = createContext();\n\nclass StoreContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      productsList: [],\n      cart: {\n        totalAmount: 0,\n        quantity: 0\n      },\n      displayModal: false\n    };\n\n    this.updateProductList = productsList => {\n      this.setState({\n        productsList\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        displayModal: false,\n        productsList: this.state.productsList.map(product => _objectSpread({}, product, {\n          count: 0\n        })),\n        cart: {\n          totalAmount: 0,\n          quantity: 0\n        }\n      });\n    };\n\n    this.showModal = () => {\n      if (this.state.cart.totalAmount > 0) this.setState({\n        displayModal: true\n      });\n    };\n\n    this.updateProductCount = (productId, updateText) => {\n      const updatedProductList = this.state.productsList.map(product => {\n        if (product.productId === productId && updateText === \"ADD\") {\n          return _objectSpread({}, product, {\n            count: product.count + 1\n          });\n        } else if (product.productId === productId && updateText === \"ADD_TO_CART\" && product.count === 0) {\n          return _objectSpread({}, product, {\n            count: product.count + 1\n          });\n        } else if (product.productId === productId && product.count > 0 && updateText === \"SUB\") {\n          return _objectSpread({}, product, {\n            count: product.count - 1\n          });\n        }\n\n        return product;\n      });\n      this.calculateCheckout(updatedProductList);\n      this.setState({\n        productsList: updatedProductList\n      });\n    };\n\n    this.calculateCheckout = updatedProductList => {\n      let totalAmount = 0;\n      let quantity = 0;\n      updatedProductList.forEach(product => {\n        if (product.count > 0) {\n          totalAmount += product.count * product.mrf;\n          quantity += product.count;\n        }\n      });\n      this.setState({\n        cart: {\n          totalAmount,\n          quantity\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(StoreContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        updateProductList: this.updateProductList,\n        updateProductCount: this.updateProductCount,\n        showModal: this.showModal,\n        closeModal: this.closeModal\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default StoreContextProvider;","map":{"version":3,"sources":["/Users/preshin/Study/shoppingCart/shopping-cart/src/contexts/StoreContext.js"],"names":["React","Component","createContext","StoreContext","StoreContextProvider","state","productsList","cart","totalAmount","quantity","displayModal","updateProductList","setState","closeModal","map","product","count","showModal","updateProductCount","productId","updateText","updatedProductList","calculateCheckout","forEach","mrf","render","props","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,YAAY,GAAGD,aAAa,EAAlC;;AAEP,MAAME,oBAAN,SAAmCH,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CI,KAD2C,GACnC;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,IAAI,EAAE;AACJC,QAAAA,WAAW,EAAE,CADT;AAEJC,QAAAA,QAAQ,EAAE;AAFN,OAFA;AAMNC,MAAAA,YAAY,EAAE;AANR,KADmC;;AAAA,SAU3CC,iBAV2C,GAUtBL,YAAD,IAAgB;AAClC,WAAKM,QAAL,CAAc;AAACN,QAAAA;AAAD,OAAd;AACD,KAZ0C;;AAAA,SAc3CO,UAd2C,GAc9B,MAAK;AAChB,WAAKD,QAAL,CAAc;AACZF,QAAAA,YAAY,EAAE,KADF;AAEZJ,QAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,CAAwBQ,GAAxB,CAA4BC,OAAO,sBAAOA,OAAP;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,UAAnC,CAFF;AAGZT,QAAAA,IAAI,EAAE;AACJC,UAAAA,WAAW,EAAE,CADT;AAEJC,UAAAA,QAAQ,EAAE;AAFN;AAHM,OAAd;AAQD,KAvB0C;;AAAA,SAyB3CQ,SAzB2C,GAyBhC,MAAI;AACb,UAAG,KAAKZ,KAAL,CAAWE,IAAX,CAAgBC,WAAhB,GAA8B,CAAjC,EACA,KAAKI,QAAL,CAAc;AAACF,QAAAA,YAAY,EAAE;AAAf,OAAd;AACD,KA5B0C;;AAAA,SA8B3CQ,kBA9B2C,GA8BtB,CAACC,SAAD,EAAYC,UAAZ,KAAyB;AAC5C,YAAMC,kBAAkB,GAAG,KAAKhB,KAAL,CAAWC,YAAX,CAAwBQ,GAAxB,CAA4BC,OAAO,IAAE;AAC9D,YAAIA,OAAO,CAACI,SAAR,KAAsBA,SAAvB,IAAqCC,UAAU,KAAK,KAAvD,EAA6D;AAC3D,mCAAYL,OAAZ;AAAqBC,YAAAA,KAAK,EAAED,OAAO,CAACC,KAAR,GAAgB;AAA5C;AACD,SAFD,MAGK,IAAID,OAAO,CAACI,SAAR,KAAsBA,SAAvB,IAAqCC,UAAU,KAAK,aAApD,IAAqEL,OAAO,CAACC,KAAR,KAAkB,CAA1F,EAA4F;AAC/F,mCAAYD,OAAZ;AAAqBC,YAAAA,KAAK,EAAED,OAAO,CAACC,KAAR,GAAgB;AAA5C;AACD,SAFI,MAGA,IAAID,OAAO,CAACI,SAAR,KAAsBA,SAAvB,IAAqCJ,OAAO,CAACC,KAAR,GAAgB,CAArD,IAA0DI,UAAU,KAAK,KAA5E,EAAkF;AACrF,mCAAYL,OAAZ;AAAqBC,YAAAA,KAAK,EAAED,OAAO,CAACC,KAAR,GAAgB;AAA5C;AACD;;AACD,eAAOD,OAAP;AACD,OAX0B,CAA3B;AAYA,WAAKO,iBAAL,CAAuBD,kBAAvB;AACA,WAAKT,QAAL,CAAc;AAACN,QAAAA,YAAY,EAAEe;AAAf,OAAd;AACD,KA7C0C;;AAAA,SA+C3CC,iBA/C2C,GA+CtBD,kBAAD,IAAsB;AACxC,UAAIb,WAAW,GAAG,CAAlB;AACA,UAAIC,QAAQ,GAAG,CAAf;AACAY,MAAAA,kBAAkB,CAACE,OAAnB,CAA2BR,OAAO,IAAI;AACpC,YAAGA,OAAO,CAACC,KAAR,GAAgB,CAAnB,EAAqB;AACnBR,UAAAA,WAAW,IAAIO,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACS,GAAvC;AACAf,UAAAA,QAAQ,IAAGM,OAAO,CAACC,KAAnB;AACD;AACF,OALD;AAMA,WAAKJ,QAAL,CAAc;AAACL,QAAAA,IAAI,EAAC;AAAEC,UAAAA,WAAF;AAAeC,UAAAA;AAAf;AAAN,OAAd;AACD,KAzD0C;AAAA;;AA2D3CgB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,oBACrB,KAAKpB,KADgB;AAExBM,QAAAA,iBAAiB,EAAE,KAAKA,iBAFA;AAGxBO,QAAAA,kBAAkB,EAAE,KAAKA,kBAHD;AAIxBD,QAAAA,SAAS,EAAE,KAAKA,SAJQ;AAKxBJ,QAAAA,UAAU,EAAE,KAAKA;AALO,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKa,KAAL,CAAWC,QAPd,CADF;AAWD;;AAvE0C;;AA0E7C,eAAevB,oBAAf","sourcesContent":["import React, { Component, createContext } from 'react';\n\nexport const StoreContext = createContext();\n\nclass StoreContextProvider extends Component {\n  state = {\n    productsList: [],\n    cart: {\n      totalAmount: 0,\n      quantity: 0\n    },\n    displayModal: false\n  }\n\n  updateProductList = (productsList)=>{\n    this.setState({productsList})\n  }\n\n  closeModal = () =>{\n    this.setState({\n      displayModal: false,\n      productsList: this.state.productsList.map(product=>({...product, count: 0})),\n      cart: {\n        totalAmount: 0,\n        quantity: 0\n      }\n    });\n  }\n\n  showModal= ()=>{\n    if(this.state.cart.totalAmount > 0)\n    this.setState({displayModal: true})\n  }\n\n  updateProductCount = (productId, updateText)=>{\n    const updatedProductList = this.state.productsList.map(product=>{\n      if((product.productId === productId) && updateText === \"ADD\"){\n        return { ...product, count: product.count + 1 }\n      }\n      else if((product.productId === productId) && updateText === \"ADD_TO_CART\" && product.count === 0){\n        return { ...product, count: product.count + 1 }\n      }\n      else if((product.productId === productId) && product.count > 0 && updateText === \"SUB\"){\n        return { ...product, count: product.count - 1 }\n      }\n      return product;\n    })\n    this.calculateCheckout(updatedProductList);\n    this.setState({productsList: updatedProductList });\n  }\n\n  calculateCheckout = (updatedProductList)=>{\n    let totalAmount = 0;\n    let quantity = 0;\n    updatedProductList.forEach(product => {\n      if(product.count > 0){\n        totalAmount += product.count * product.mrf\n        quantity+= product.count\n      }\n    });\n    this.setState({cart:{ totalAmount, quantity }})\n  }\n\n  render() {\n    return (\n      <StoreContext.Provider value={{\n          ...this.state,\n          updateProductList: this.updateProductList,\n          updateProductCount: this.updateProductCount,\n          showModal: this.showModal,\n          closeModal: this.closeModal\n        }}>\n        {this.props.children}\n      </StoreContext.Provider>\n    );\n  }\n}\n\nexport default StoreContextProvider;"]},"metadata":{},"sourceType":"module"}