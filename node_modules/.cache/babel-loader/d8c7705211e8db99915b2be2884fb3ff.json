{"ast":null,"code":"import _defineProperty from \"/Users/preshin/Study/shoppingCart/shopping-cart/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/preshin/Study/shoppingCart/shopping-cart/src/contexts/StoreContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, createContext } from 'react';\nexport const StoreContext = createContext();\n\nclass StoreContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      productsList: [],\n      cart: {\n        totalAmount: 0,\n        quantity: 0\n      }\n    };\n\n    this.updateProductList = productsList => {\n      this.setState({\n        productsList\n      });\n    };\n\n    this.updateProductCount = (productId, updateText) => {\n      // let totalAmount = 0;\n      // let quantity = 0;\n      const updatedProductList = this.state.productsList.map(product => {\n        // if(product.count > 0){\n        //   totalAmount = this.state.cart.totalAmount + product.mrf;\n        // }\n        if (product.productId === productId && updateText === \"ADD\") {\n          return _objectSpread({}, product, {\n            count: product.count + 1\n          });\n        } else if (product.productId === productId && updateText === \"ADD_TO_CART\" && product.count === 0) {\n          return _objectSpread({}, product, {\n            count: product.count + 1\n          });\n        } else if (product.productId === productId && product.count > 0 && updateText === \"SUB\") {\n          return _objectSpread({}, product, {\n            count: product.count - 1\n          });\n        }\n\n        return product;\n      });\n      this.calculateCheckout(updatedProductList);\n      this.setState({\n        productsList: updatedProductList\n      });\n    };\n\n    this.calculateCheckout = updatedProductList => {\n      let totalAmount = 0;\n      let quantity = 0;\n      updatedProductList.forEach(product => {\n        if (product.count > 0) {\n          totalAmount += product.count * product.mrf;\n          quantity += product.count;\n        }\n      });\n      this.setState({\n        cart: {\n          totalAmount,\n          quantity\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(StoreContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        updateProductList: this.updateProductList,\n        updateProductCount: this.updateProductCount\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default StoreContextProvider;","map":{"version":3,"sources":["/Users/preshin/Study/shoppingCart/shopping-cart/src/contexts/StoreContext.js"],"names":["React","Component","createContext","StoreContext","StoreContextProvider","state","productsList","cart","totalAmount","quantity","updateProductList","setState","updateProductCount","productId","updateText","updatedProductList","map","product","count","calculateCheckout","forEach","mrf","render","props","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AAEA,OAAO,MAAMC,YAAY,GAAGD,aAAa,EAAlC;;AAEP,MAAME,oBAAN,SAAmCH,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CI,KAD2C,GACnC;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,IAAI,EAAE;AACJC,QAAAA,WAAW,EAAE,CADT;AAEJC,QAAAA,QAAQ,EAAE;AAFN;AAFA,KADmC;;AAAA,SAS3CC,iBAT2C,GAStBJ,YAAD,IAAgB;AAClC,WAAKK,QAAL,CAAc;AAACL,QAAAA;AAAD,OAAd;AACD,KAX0C;;AAAA,SAa3CM,kBAb2C,GAatB,CAACC,SAAD,EAAYC,UAAZ,KAAyB;AAC5C;AACA;AACA,YAAMC,kBAAkB,GAAG,KAAKV,KAAL,CAAWC,YAAX,CAAwBU,GAAxB,CAA4BC,OAAO,IAAE;AAC9D;AACA;AACA;AACA,YAAIA,OAAO,CAACJ,SAAR,KAAsBA,SAAvB,IAAqCC,UAAU,KAAK,KAAvD,EAA6D;AAC3D,mCAAYG,OAAZ;AAAqBC,YAAAA,KAAK,EAAED,OAAO,CAACC,KAAR,GAAgB;AAA5C;AACD,SAFD,MAGK,IAAID,OAAO,CAACJ,SAAR,KAAsBA,SAAvB,IAAqCC,UAAU,KAAK,aAApD,IAAqEG,OAAO,CAACC,KAAR,KAAkB,CAA1F,EAA4F;AAC/F,mCAAYD,OAAZ;AAAqBC,YAAAA,KAAK,EAAED,OAAO,CAACC,KAAR,GAAgB;AAA5C;AACD,SAFI,MAGA,IAAID,OAAO,CAACJ,SAAR,KAAsBA,SAAvB,IAAqCI,OAAO,CAACC,KAAR,GAAgB,CAArD,IAA0DJ,UAAU,KAAK,KAA5E,EAAkF;AACrF,mCAAYG,OAAZ;AAAqBC,YAAAA,KAAK,EAAED,OAAO,CAACC,KAAR,GAAgB;AAA5C;AACD;;AACD,eAAOD,OAAP;AACD,OAd0B,CAA3B;AAeA,WAAKE,iBAAL,CAAuBJ,kBAAvB;AACA,WAAKJ,QAAL,CAAc;AAACL,QAAAA,YAAY,EAAES;AAAf,OAAd;AACD,KAjC0C;;AAAA,SAmC3CI,iBAnC2C,GAmCtBJ,kBAAD,IAAsB;AACxC,UAAIP,WAAW,GAAG,CAAlB;AACA,UAAIC,QAAQ,GAAG,CAAf;AACAM,MAAAA,kBAAkB,CAACK,OAAnB,CAA2BH,OAAO,IAAI;AACpC,YAAGA,OAAO,CAACC,KAAR,GAAgB,CAAnB,EAAqB;AACnBV,UAAAA,WAAW,IAAIS,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACI,GAAvC;AACAZ,UAAAA,QAAQ,IAAGQ,OAAO,CAACC,KAAnB;AACD;AACF,OALD;AAMA,WAAKP,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAC;AAAEC,UAAAA,WAAF;AAAeC,UAAAA;AAAf;AAAN,OAAd;AACD,KA7C0C;AAAA;;AA+C3Ca,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,oBACrB,KAAKjB,KADgB;AAExBK,QAAAA,iBAAiB,EAAE,KAAKA,iBAFA;AAGxBE,QAAAA,kBAAkB,EAAE,KAAKA;AAHD,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKW,KAAL,CAAWC,QALd,CADF;AASD;;AAzD0C;;AA4D7C,eAAepB,oBAAf","sourcesContent":["import React, { Component, createContext } from 'react';\n\nexport const StoreContext = createContext();\n\nclass StoreContextProvider extends Component {\n  state = {\n    productsList: [],\n    cart: {\n      totalAmount: 0,\n      quantity: 0\n    }\n  }\n\n  updateProductList = (productsList)=>{\n    this.setState({productsList})\n  }\n\n  updateProductCount = (productId, updateText)=>{\n    // let totalAmount = 0;\n    // let quantity = 0;\n    const updatedProductList = this.state.productsList.map(product=>{\n      // if(product.count > 0){\n      //   totalAmount = this.state.cart.totalAmount + product.mrf;\n      // }\n      if((product.productId === productId) && updateText === \"ADD\"){\n        return { ...product, count: product.count + 1 }\n      }\n      else if((product.productId === productId) && updateText === \"ADD_TO_CART\" && product.count === 0){\n        return { ...product, count: product.count + 1 }\n      }\n      else if((product.productId === productId) && product.count > 0 && updateText === \"SUB\"){\n        return { ...product, count: product.count - 1 }\n      }\n      return product;\n    })\n    this.calculateCheckout(updatedProductList);\n    this.setState({productsList: updatedProductList });\n  }\n\n  calculateCheckout = (updatedProductList)=>{\n    let totalAmount = 0;\n    let quantity = 0;\n    updatedProductList.forEach(product => {\n      if(product.count > 0){\n        totalAmount += product.count * product.mrf\n        quantity+= product.count\n      }\n    });\n    this.setState({cart:{ totalAmount, quantity }})\n  }\n\n  render() {\n    return (\n      <StoreContext.Provider value={{\n          ...this.state,\n          updateProductList: this.updateProductList,\n          updateProductCount: this.updateProductCount\n        }}>\n        {this.props.children}\n      </StoreContext.Provider>\n    );\n  }\n}\n\nexport default StoreContextProvider;"]},"metadata":{},"sourceType":"module"}